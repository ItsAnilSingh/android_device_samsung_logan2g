From: Anil Singh <canilsingh07@gmail.com>
Date: Thu, 14 Jun 2016 14:32:00 +0530
Subject: [PATCH] frameworks/av: SPRD video fix
Rebased on ih24n69's patches
---
diff --git a/av/media/libstagefright/ACodec.cpp b/av/media/libstagefright/ACodec.cpp
index 7e31dfb..be16631 100755
--- a/av/media/libstagefright/ACodec.cpp
+++ b/av/media/libstagefright/ACodec.cpp
@@ -41,8 +41,10 @@
 #include <OMX_Component.h>
 
 #ifdef USE_SAMSUNG_COLORFORMAT
+#ifndef SPRD_HARDWARE
 #include <sec_format.h>
 #endif
+#endif
 
 #ifdef USE_TI_CUSTOM_DOMX
 #include <OMX_TI_IVCommon.h>
@@ -910,6 +912,10 @@ void ACodec::setNativeWindowColorFormat(OMX_COLOR_FORMATTYPE &eNativeColorFormat
 {
     // In case of Samsung decoders, we set proper native color format for the Native Window
     if (!strcasecmp(mComponentName.c_str(), "OMX.SEC.AVC.Decoder")
+        || !strcasecmp(mComponentName.c_str(), "OMX.sprd.mpeg4.decoder")
+        || !strcasecmp(mComponentName.c_str(), "OMX.sprd.h263.decoder")
+        || !strcasecmp(mComponentName.c_str(), "OMX.sprd.h264.decoder")
+        || !strcasecmp(mComponentName.c_str(), "OMX.sprd.vpx.decoder")
         || !strcasecmp(mComponentName.c_str(), "OMX.SEC.FP.AVC.Decoder")) {
         switch (eNativeColorFormat) {
             case OMX_COLOR_FormatYUV420SemiPlanar:
diff --git a/av/media/libstagefright/CameraSource.cpp b/av/media/libstagefright/CameraSource.cpp
index 38763c5..564c05e 100644
--- a/av/media/libstagefright/CameraSource.cpp
+++ b/av/media/libstagefright/CameraSource.cpp
@@ -124,7 +124,7 @@ static int32_t getColorFormat(const char* colorFormat) {
     }
 
     if (!strcmp(colorFormat, CameraParameters::PIXEL_FORMAT_YUV420SP)) {
-#ifdef USE_SAMSUNG_COLORFORMAT
+#if defined(USE_SAMSUNG_COLORFORMAT) && !defined(SPRD_HARDWARE)
         static const int OMX_SEC_COLOR_FormatNV12LPhysicalAddress = 0x7F000002;
         return OMX_SEC_COLOR_FormatNV12LPhysicalAddress;
 #else
diff --git a/av/media/libstagefright/OMXCodec.cpp b/av/media/libstagefright/OMXCodec.cpp
index 551807e..f603a7b 100644
--- a/av/media/libstagefright/OMXCodec.cpp
+++ b/av/media/libstagefright/OMXCodec.cpp
@@ -66,8 +66,10 @@
 #endif
 
 #ifdef USE_SAMSUNG_COLORFORMAT
+#ifndef SPRD_HARDWARE
 #include <sec_format.h>
 #endif
+#endif
 
 #ifdef USE_TI_CUSTOM_DOMX
 #include <OMX_TI_Video.h>
@@ -2440,9 +2442,11 @@ status_t OMXCodec::allocateOutputBuffersFromNativeWindow() {
     OMX_COLOR_FORMATTYPE eColorFormat;
 
     switch (def.format.video.eColorFormat) {
+#ifndef SPRD_HARDWARE
     case OMX_SEC_COLOR_FormatNV12TPhysicalAddress:
         eColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_CUSTOM_YCbCr_420_SP_TILED;
         break;
+#endif
     case OMX_COLOR_FormatYUV420SemiPlanar:
         eColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_YCbCr_420_SP;
         break;
diff --git a/native/include/media/openmax/OMX_IVCommon.h b/native/include/media/openmax/OMX_IVCommon.h
index 940911e..dca6a53 100644
--- a/native/include/media/openmax/OMX_IVCommon.h
+++ b/native/include/media/openmax/OMX_IVCommon.h
@@ -169,6 +169,9 @@ typedef enum OMX_COLOR_FORMATTYPE {
     OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar64x32Tile2m8ka = 0x7FA30C03,
     OMX_SEC_COLOR_FormatNV12Tiled = 0x7FC00002,
     OMX_QCOM_COLOR_FormatYUV420PackedSemiPlanar32m = 0x7FA30C04,
+#ifdef SPRD_HARDWARE
+    OMX_SPRD_COLOR_FormatYVU420SemiPlanar = 0x7FD00001,
+#endif
     OMX_COLOR_FormatMax = 0x7FFFFFFF,
 } OMX_COLOR_FORMATTYPE;
 
diff --git a/native/include/media/openmax/OMX_Index.h b/native/include/media/openmax/OMX_Index.h
index ab3f55e..3c6dd26 100644
--- a/native/include/media/openmax/OMX_Index.h
+++ b/native/include/media/openmax/OMX_Index.h
@@ -277,6 +277,23 @@ typedef enum OMX_INDEXTYPE {
        private indexes are not guaranteed unique and therefore should
        only be sent to the appropriate component. */
 
+#ifdef SPRD_HARDWARE
+    /* for Android Native Window */
+#define SPRD_INDEX_PARAM_ENABLE_ANB "OMX.google.android.index.enableAndroidNativeBuffers"
+    OMX_IndexParamEnableAndroidBuffers         = 0x7F000011,
+#define SPRD_INDEX_PARAM_GET_ANB "OMX.google.android.index.getAndroidNativeBufferUsage"
+    OMX_IndexParamGetAndroidNativeBuffer       = 0x7F000012,
+#define SPRD_INDEX_PARAM_USE_ANB "OMX.google.android.index.useAndroidNativeBuffer2"
+    OMX_IndexParamUseAndroidNativeBuffer2      = 0x7F000013,
+    /* for Android Store Metadata Inbuffer */
+#define SPRD_INDEX_PARAM_STORE_METADATA_BUFFER "OMX.google.android.index.storeMetaDataInBuffers"
+    OMX_IndexParamStoreMetaDataBuffer          = 0x7F000014,
+#define SPRD_INDEX_PARAM_PREPEND_SPSPPS_TO_IDR "OMX.google.android.index.prependSPSPPSToIDRFrames"
+    OMX_IndexParamPrependSPSPPSToIDR           = 0x7F000015,
+#define SPRD_INDEX_CONFIG_THUMBNAIL_MODE "OMX.sprd.index.ThumbnailMode"
+    OMX_IndexConfigThumbnailMode               = 0x7F000016,
+#endif
+
 #ifdef MTK_HARDWARE
     OMX_IndexVendorMtkOmxVdecTimeSource        = 0x7F000001,
     OMX_IndexVendorMtkOmxVdecThumbnailMode     = 0x7F00000A,
diff --git a/native/include/ui/PixelFormat.h b/native/include/ui/PixelFormat.h
index 79a29bc..5d960b1 100644
--- a/native/include/ui/PixelFormat.h
+++ b/native/include/ui/PixelFormat.h
@@ -63,6 +63,9 @@ enum {
     PIXEL_FORMAT_BGRA_8888   = HAL_PIXEL_FORMAT_BGRA_8888,  // 4x8-bit BGRA
     PIXEL_FORMAT_RGBA_5551   = 6,                           // 16-bit ARGB
     PIXEL_FORMAT_RGBA_4444   = 7,                           // 16-bit ARGB
+#ifdef SPRD_HARDWARE
+    PIXEL_FORMAT_YCbCr_420_SP= 25,
+#endif
 };
 
 typedef int32_t PixelFormat;
