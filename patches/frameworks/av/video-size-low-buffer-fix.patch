From: Anil Singh <canilsingh07@gmail.com>
Date: Thu, 02 Jun 2016 14:30:00 +0530
Subject: [PATCH] frameworks/av: Video size, low buffer fix

Rebased on pawitp's patches
---
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index 91ba093..7d71f92 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -799,11 +799,35 @@ status_t OMXCodec::configureCodec(const sp<MetaData> &meta) {
 #endif
         }
     }
+// SC6820I's OMX fail to set a reasonable default size from width and height
+#ifdef SC6820I_HWC
+    else if (!strncmp(mComponentName, "OMX.BRCM.mali.decoder.", 21)) {
+        int32_t width;
+        int32_t height;
+        if (meta->findInt32(kKeyWidth, &width) && meta->findInt32(kKeyHeight, &height)) {
+            setMinBufferSize(kPortIndexInput, (width * height * 3) / 2);
+        } else {
+            ALOGE("Failed to set min buffer size");
+        }
+    }
+#endif
 
     int32_t maxInputSize;
     if (meta->findInt32(kKeyMaxInputSize, &maxInputSize)) {
         setMinBufferSize(kPortIndexInput, (OMX_U32)maxInputSize);
     }
+// SC6820I's OMX fail to set a reasonable default size from width and height
+#ifdef SC6820I_HWC
+    else if (!strncmp(mComponentName, "OMX.BRCM.mali.decoder.", 21)) {
+        int32_t width;
+        int32_t height;
+        if (meta->findInt32(kKeyWidth, &width) && meta->findInt32(kKeyHeight, &height)) {
+            setMinBufferSize(kPortIndexInput, (width * height * 3) / 2);
+        } else {
+            ALOGE("Failed to set min buffer size");
+        }
+    }
+#endif
 
     initOutputFormat(meta);
 
diff --git a/services/audioflinger/AudioMixer.cpp b/services/audioflinger/AudioMixer.cpp
index ab6f38f..7e12ca9 100644
--- a/services/audioflinger/AudioMixer.cpp
+++ b/services/audioflinger/AudioMixer.cpp
@@ -1113,8 +1113,11 @@ void AudioMixer::process__genericNoResampling(state_t* state, int64_t pts)
         t.in = t.buffer.raw;
         // t.in == NULL can happen if the track was flushed just after having
         // been enabled for mixing.
-        if (t.in == NULL)
+        if (t.in == NULL) {
             enabledTracks &= ~(1<<i);
+            // We need to clear buffer or there will be strange artifact on S7262's speaker
+            memset(t.mainBuffer, 0, sizeof(int16_t) * MAX_NUM_CHANNELS * state->frameCount);
+        }
     }
 
     e0 = enabledTracks;
